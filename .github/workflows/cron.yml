name: "Cron âž• workflows"
on:
  push:
    #branches: [master, unstable]
    paths: ['**cron.yml']
  schedule:
    - cron: '*/10 * * * *'
  workflow_dispatch:
    inputs:
      workflow-name:
        description: 'Dispatch workflow (defaults to latest)'
        required: false
        default: ''

jobs:
  check-lambda-app:
    runs-on: ubuntu-latest
    steps:
      - name: "Next app checker"
        if: github.event.inputs.workflow-name == ''
        run: |
          nextAW=`curl -L --silent https://phpsecu.re/api/registry/workflow | grep '^{' | jq -r .need_workflow[0]`
          if [[ "$nextAW" == "" || "$nextAW" == "null" ]]; then echo "[INFO] No workflow in queue"; exit 0; fi
          nextURL=`echo "$nextAW" | jq  -r .workflow_url`;
          if [[ "$nextURL" == "" || "$nextURL" == "null" ]]; then echo "[ERROR] No workflow_url, JSON chunk: $nextAW"; exit 1; fi
          nextSlug=`echo "$nextAW" | jq  -r .slug`;
          if [[ "$nextSlug" == "" || "$nextSlug" == "null" ]]; then echo "[ERROR] No slug, JSON chunk: $nextAW"; exit 1; fi
          nextRepo=`echo "$nextAW" | jq  -r .repo`;
          if [[ "$nextRepo" == "" || "$nextRepo" == "null" ]]; then echo "[ERROR] No repo, JSON chunk: $nextAW"; exit 1; fi
          nextBoard=`echo "$nextAW" | jq  -r .board`;
          if [[ "$nextBoard" == "" || "$nextBoard" == "null" ]]; then echo "[ERROR] No board, JSON chunk: $nextAW"; exit 1; fi
          nextPlatform=`echo "$nextAW" | jq  -r .platform`;
          if [[ "$nextPlatform" == "" || "$nextPlatform" == "null" ]]; then echo "[ERROR] No platform, JSON chunk: $nextAW"; exit 1; fi
          jsonString="{\"board-name\":\"$nextBoard\", \"platform-name\":\"$nextPlatform\", \"remote-app-path\":\"$nextURL\", \"remote-app-slug\":\"$nextSlug\", \"remote-repo-slug\":\"$nextRepo\"}"
          echo "WORKFLOW_NAME=$nextSlug.yml" >> $GITHUB_ENV
          echo "JSON_INPUTS=$jsonString" >> $GITHUB_ENV

      - name: "Dispatched setter"
        if: github.event.inputs.workflow-name != ''
        run: |
          echo "WORKFLOW_NAME=${{ github.event.inputs.workflow-name }}" >> $GITHUB_ENV
          echo "JSON_INPUTS=\"\"" >> $GITHUB_ENV

      - name: "Dispatch"
        if: env.WORKFLOW_NAME != ''
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: ${{ env.WORKFLOW_NAME }}
          repo: ${{ secrets.REGISTRY_REPOSITORY }}
          token: ${{ secrets.GHTOKEN }}
          inputs: '${{ env.JSON_INPUTS }}'
