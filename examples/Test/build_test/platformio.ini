[platformio]
default_envs = m5stack-core-esp32
src_dir = main


[esp32_1_0_6]
platform_packages = framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#1.0.6
[esp32_2_0_1]
platform_packages = framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.1
[esp32_2_0_2]
platform_packages = framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.2
[esp32_2_0_3]
platform_packages = framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.3-RC1

[platform_default]
platform = espressif32
platform_packages = framework-arduinoespressif32

[platform_tasmota]
platform = https://github.com/tasmota/platform-espressif32

[platform_official]
platform = https://github.com/platformio/platform-espressif32.git


[env]
framework = arduino
platform = ${platform_tasmota.platform}
platform_packages = ${platform_default.platform_packages}
board = m5stack-core-esp32
; /!\ This assumes the CI has copied the library folder under this path
; Otherwise comment lib_extra_dirs out and enable "M5Stack-SD-Updater" in "lib_deps"
lib_extra_dirs = ../../../../M5Stack-SD-Updater
;lib_extra_dirs =
;  /tmp/piolib
;  M5Stack-SD-Updater
build_type = debug


[env:lgfx]
[env:m5stick-c]
[env:m5stack-core-esp32]
[env:m5stack-core2]
[env:m5unified]
[env:s3box]


[env:lgfx@1.0.6]
platform = ${platform_official.platform}
platform_packages = ${esp32_1_0_6.platform_packages}
build_flags = -DTEST_LGFX
lib_deps = LovyanGFX
[env:lgfx@2.0.1]
platform_packages = ${esp32_2_0_1.platform_packages}
build_flags = -DTEST_LGFX
lib_deps = LovyanGFX
[env:lgfx@2.0.2]
platform_packages = ${esp32_2_0_2.platform_packages}
build_flags = -DTEST_LGFX
lib_deps = LovyanGFX
[env:lgfx@2.0.3-RC1]
platform_packages = ${esp32_2_0_3.platform_packages}
build_flags = -DTEST_LGFX
lib_deps = LovyanGFX

[env:m5stick-c@1.0.6]
platform = ${platform_official.platform}
platform_packages = ${esp32_1_0_6.platform_packages}
board = m5stick-c
build_flags = -DTEST_M5StickC
lib_deps = M5StickC
[env:m5stick-c@2.0.1]
board = m5stick-c
platform_packages = ${esp32_2_0_1.platform_packages}
build_flags = -DTEST_M5StickC
lib_deps = M5StickC
[env:m5stick-c@2.0.2]
board = m5stick-c
platform_packages = ${esp32_2_0_2.platform_packages}
build_flags = -DTEST_M5StickC
lib_deps = M5StickC
[env:m5stick-c@2.0.3-RC1]
board = m5stick-c
platform_packages = ${esp32_2_0_3.platform_packages}
build_flags = -DTEST_M5StickC
lib_deps = M5StickC

[env:m5stack-core-esp32@1.0.6]
platform = ${platform_official.platform}
platform_packages = ${esp32_1_0_6.platform_packages}
build_flags = -DTEST_M5Stack
lib_deps = ESP32-Chimera-Core
[env:m5stack-core-esp32@2.0.1]
platform_packages = ${esp32_2_0_1.platform_packages}
build_flags = -DTEST_M5Stack
lib_deps = ESP32-Chimera-Core
[env:m5stack-core-esp32@2.0.2]
platform_packages = ${esp32_2_0_2.platform_packages}
build_flags = -DTEST_M5Stack
lib_deps = ESP32-Chimera-Core
[env:m5stack-core-esp32@2.0.3-RC1]
platform_packages = ${esp32_2_0_3.platform_packages}
build_flags = -DTEST_M5Stack
lib_deps = ESP32-Chimera-Core

[env:m5stack-core2@1.0.6]
platform = ${platform_official.platform}
platform_packages = ${esp32_1_0_6.platform_packages}
board = m5stack-core2
build_flags = -DTEST_M5Core2
lib_deps = M5Core2
[env:m5stack-core2@2.0.1]
board = m5stack-core2
platform_packages = ${esp32_2_0_1.platform_packages}
build_flags = -DTEST_M5Core2
lib_deps = M5Core2
[env:m5stack-core2@2.0.2]
board = m5stack-core2
platform_packages = ${esp32_2_0_2.platform_packages}
build_flags = -DTEST_M5Core2
lib_deps = M5Core2
[env:m5stack-core2@2.0.3-RC1]
board = m5stack-core2
platform_packages = ${esp32_2_0_3.platform_packages}
build_flags = -DTEST_M5Core2
lib_deps = M5Core2


[env:m5unified@1.0.6]
platform = ${platform_official.platform}
platform_packages = ${esp32_1_0_6.platform_packages}
build_flags = -DTEST_M5Unified
lib_deps = M5Unified
[env:m5unified@2.0.1]
platform_packages = ${esp32_2_0_1.platform_packages}
build_flags = -DTEST_M5Unified
lib_deps = M5Unified
[env:m5unified@2.0.2]
platform_packages = ${esp32_2_0_2.platform_packages}
build_flags = -DTEST_M5Unified
lib_deps = M5Unified
[env:m5unified@2.0.3-RC1]
platform_packages = ${esp32_2_0_3.platform_packages}
build_flags = -DTEST_M5Unified
lib_deps = M5Unified


[env:s3box@2.0.3-RC1]
board = esp32dev
platform_packages = ${esp32_2_0_3.platform_packages}
board_build.mcu = esp32s3
build_flags = -DTEST_S3Box
lib_deps = ESP32-Chimera-Core
