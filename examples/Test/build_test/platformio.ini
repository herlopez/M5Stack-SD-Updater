[platformio]
default_envs      = m5stack-core-esp32
src_dir           = main


[platform_default]
platform          = espressif32
platform_packages = framework-arduinoespressif32

[platform_tasmota]
platform          = https://github.com/tasmota/platform-espressif32

[platform_official]
platform          = https://github.com/platformio/platform-espressif32.git

[esp32_1_0_6]
platform          = ${platform_official.platform}
platform_packages = framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#1.0.6

[esp32_2_0_0]
platform          = https://github.com/platformio/platform-espressif32.git#feature/arduino-upstream
platform_packages =
  toolchain-xtensa32 @ ~2.80400.0
  framework-arduinoespressif32@https://github.com/espressif/arduino-esp32.git#2.0.0

[esp32_2_0_1]
platform          = ${platform_tasmota.platform}
platform_packages = framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.1

[esp32_2_0_2]
platform          = ${platform_tasmota.platform}
platform_packages = framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.2

[esp32_2_0_3]
platform          = ${platform_tasmota.platform}
platform_packages = framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.3-RC1




[env]
framework         = arduino
board             = m5stack-core-esp32
build_type        = debug
lib_ldf_mode      = deep


[lgfx]
build_flags       = -DTEST_LGFX
lib_deps          =
  M5Stack-SD-Updater
  LovyanGFX

[M5StickC]
build_flags       = -DTEST_M5StickC
lib_deps          =
  M5Stack-SD-Updater
  M5StickC

[M5Stack]
build_flags       = -DTEST_M5Stack
lib_deps          =
  M5Stack-SD-Updater
  ESP32-Chimera-Core

[M5Core2]
build_flags       = -DTEST_M5Core2
lib_deps          =
  M5Stack-SD-Updater
  M5Core2

[M5Unified]
build_flags       = -DTEST_M5Unified
lib_deps          =
  M5Stack-SD-Updater
  M5Unified

[S3Box]
build_flags       = -DTEST_S3Box
lib_deps          =
  M5Stack-SD-Updater
  ESP32-Chimera-Core



[env:m5stack-core-esp32]
[env:m5stack-core2]
[env:m5stick-c]
[env:m5unified]
[env:lgfx]
[env:s3box]


[env:m5stack-core-esp32@1.0.6]
platform          = ${esp32_1_0_6.platform}
platform_packages = ${esp32_1_0_6.platform_packages}
build_flags       = ${M5Stack.build_flags}
lib_deps          = ${M5Stack.lib_deps}
[env:m5stack-core-esp32@2.0.0]
platform          = ${esp32_2_0_0.platform}
platform_packages = ${esp32_2_0_0.platform_packages}
build_flags       = ${M5Stack.build_flags}
lib_deps          = ${M5Stack.lib_deps}
[env:m5stack-core-esp32@2.0.1]
platform          = ${esp32_2_0_1.platform}
platform_packages = ${esp32_2_0_1.platform_packages}
build_flags       = ${M5Stack.build_flags}
lib_deps          = ${M5Stack.lib_deps}
[env:m5stack-core-esp32@2.0.2]
platform          = ${esp32_2_0_2.platform}
platform_packages = ${esp32_2_0_2.platform_packages}
build_flags       = ${M5Stack.build_flags}
lib_deps          = ${M5Stack.lib_deps}
[env:m5stack-core-esp32@2.0.3-RC1]
platform          = ${esp32_2_0_3.platform}
platform_packages = ${esp32_2_0_3.platform_packages}
build_flags       = ${M5Stack.build_flags}
lib_deps          = ${M5Stack.lib_deps}

[env:m5stack-core2@1.0.6]
board             = m5stack-core2
platform          = ${esp32_1_0_6.platform}
platform_packages = ${esp32_1_0_6.platform_packages}
build_flags       = ${M5Core2.build_flags}
lib_deps          = ${M5Core2.lib_deps}
[env:m5stack-core2@2.0.0]
platform          = ${esp32_2_0_0.platform}
platform_packages = ${esp32_2_0_0.platform_packages}
build_flags       = ${M5Core2.build_flags}
lib_deps          = ${M5Core2.lib_deps}
[env:m5stack-core2@2.0.1]
board             = m5stack-core2
platform          = ${esp32_2_0_1.platform}
platform_packages = ${esp32_2_0_1.platform_packages}
build_flags       = ${M5Core2.build_flags}
lib_deps          = ${M5Core2.lib_deps}
[env:m5stack-core2@2.0.2]
board             = m5stack-core2
platform          = ${esp32_2_0_2.platform}
platform_packages = ${esp32_2_0_2.platform_packages}
build_flags       = ${M5Core2.build_flags}
lib_deps          = ${M5Core2.lib_deps}
[env:m5stack-core2@2.0.3-RC1]
board             = m5stack-core2
platform          = ${esp32_2_0_3.platform}
platform_packages = ${esp32_2_0_3.platform_packages}
build_flags       = ${M5Core2.build_flags}
lib_deps          = ${M5Core2.lib_deps}

[env:m5stick-c@1.0.6]
platform          = ${esp32_1_0_6.platform}
platform_packages = ${esp32_1_0_6.platform_packages}
board             = m5stick-c
build_flags       = ${M5StickC.build_flags}
lib_deps          = ${M5StickC.lib_deps}
[env:m5stick-c@2.0.0]
platform          = ${esp32_2_0_0.platform}
platform_packages = ${esp32_2_0_0.platform_packages}
build_flags       = ${M5StickC.build_flags}
lib_deps          = ${M5StickC.lib_deps}
[env:m5stick-c@2.0.1]
board             = m5stick-c
platform          = ${esp32_2_0_1.platform}
platform_packages = ${esp32_2_0_1.platform_packages}
build_flags       = ${M5StickC.build_flags}
lib_deps          = ${M5StickC.lib_deps}
[env:m5stick-c@2.0.2]
board             = m5stick-c
platform          = ${esp32_2_0_2.platform}
platform_packages = ${esp32_2_0_2.platform_packages}
build_flags       = ${M5StickC.build_flags}
lib_deps          = ${M5StickC.lib_deps}
[env:m5stick-c@2.0.3-RC1]
board             = m5stick-c
platform          = ${esp32_2_0_3.platform}
platform_packages = ${esp32_2_0_3.platform_packages}
build_flags       = ${M5StickC.build_flags}
lib_deps          = ${M5StickC.lib_deps}

[env:m5unified@1.0.6]
platform          = ${esp32_1_0_6.platform}
platform_packages = ${esp32_1_0_6.platform_packages}
build_flags       = ${M5Unified.build_flags}
lib_deps          = ${M5Unified.lib_deps}
[env:m5unified@2.0.0]
platform          = ${esp32_2_0_0.platform}
platform_packages = ${esp32_2_0_0.platform_packages}
build_flags       = ${M5Unified.build_flags}
lib_deps          = ${M5Unified.lib_deps}
[env:m5unified@2.0.1]
platform          = ${esp32_2_0_1.platform}
platform_packages = ${esp32_2_0_1.platform_packages}
build_flags       = ${M5Unified.build_flags}
lib_deps          = ${M5Unified.lib_deps}
[env:m5unified@2.0.2]
platform          = ${esp32_2_0_2.platform}
platform_packages = ${esp32_2_0_2.platform_packages}
build_flags       = ${M5Unified.build_flags}
lib_deps          = ${M5Unified.lib_deps}
[env:m5unified@2.0.3-RC1]
platform          = ${esp32_2_0_3.platform}
platform_packages = ${esp32_2_0_3.platform_packages}
build_flags       = ${M5Unified.build_flags}
lib_deps          = ${M5Unified.lib_deps}

[env:lgfx@1.0.6]
platform          = ${esp32_1_0_6.platform}
platform_packages = ${esp32_1_0_6.platform_packages}
build_flags       = ${lgfx.build_flags}
lib_deps          = ${lgfx.lib_deps}
[env:lgfx@2.0.0]
platform          = ${esp32_2_0_0.platform}
platform_packages = ${esp32_2_0_0.platform_packages}
build_flags       = ${lgfx.build_flags}
lib_deps          = ${lgfx.lib_deps}
[env:lgfx@2.0.1]
platform          = ${esp32_2_0_1.platform}
platform_packages = ${esp32_2_0_1.platform_packages}
build_flags       = ${lgfx.build_flags}
lib_deps          = ${lgfx.lib_deps}
[env:lgfx@2.0.2]
platform          = ${esp32_2_0_2.platform}
platform_packages = ${esp32_2_0_2.platform_packages}
build_flags       = ${lgfx.build_flags}
lib_deps          = ${lgfx.lib_deps}
[env:lgfx@2.0.3-RC1]
platform          = ${esp32_2_0_3.platform}
platform_packages = ${esp32_2_0_3.platform_packages}
build_flags       = ${lgfx.build_flags}
lib_deps          = ${lgfx.lib_deps}

[env:s3box@2.0.3-RC1]
board = esp32dev
platform          = ${esp32_2_0_3.platform}
platform_packages = ${esp32_2_0_3.platform_packages}
board_build.mcu   = esp32s3
build_flags       = ${S3Box.build_flags}
lib_deps          = ${S3Box.lib_deps}
